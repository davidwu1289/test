private void splitDataIntoOutputFiles(String dataFilePath, String outputDir, Integer linesPerFile, Integer sizePerFile) throws IOException {
    try (BufferedReader br = new BufferedReader(new FileReader(dataFilePath))) {
        String line;
        int recordCount = 0;
        int fileCount = 1;
        long currentFileSize = 0;
        
        BufferedWriter bw = null;
        String currentOutputFileName = getOutputFileName(outputDir, fileCount);

        while ((line = br.readLine()) != null) {
            // Initialize BufferedWriter if it's null
            if (bw == null) {
                bw = new BufferedWriter(new FileWriter(currentOutputFileName));
            }
            
            // Write and flush the line to the current output file
            bw.write(line);
            bw.newLine();
            bw.flush();
            
            // Update the record count and current file size
            recordCount++;
            currentFileSize += line.getBytes().length;
            
            // Check if the file should be split
            boolean shouldSplit = (linesPerFile != null && recordCount >= linesPerFile) ||
                                   (sizePerFile != null && currentFileSize >= sizePerFile);

            if (shouldSplit) {
                bw.close();  // Close the current BufferedWriter
                
                // Reset counts and sizes
                recordCount = 0;
                currentFileSize = 0;
                fileCount++;

                // Initialize a new BufferedWriter for the next file
                currentOutputFileName = getOutputFileName(outputDir, fileCount);
                bw = new BufferedWriter(new FileWriter(currentOutputFileName));
            }
        }
        
        // Close the last BufferedWriter
        if (bw != null) {
            bw.close();
        }
    }
}

