private Record parseRecord(String line) {
        // Create a new Record object
        Record record = new Record();

        int startPos = 0;

        // Iterate over each field in the schema and set the values in the Record object
        for (FieldInfo fieldInfo : schema) {
            int fieldLength = fieldInfo.getLength();
            String fieldValue = line.substring(startPos, startPos + fieldLength).trim();
            startPos += fieldLength;

            switch (fieldInfo.getType()) {
                case "Numeric":
                    // Remove leading zeros and parse as a long integer
                    record.setValue(fieldInfo.getName(), Long.parseLong(fieldValue));
                    break;
                case "String":
                    record.setValue(fieldInfo.getName(), fieldValue);
                    break;
                case "Date":
                    // Parse the date using the specified format
                    Date date = parseDate(fieldValue, DATE_FORMAT);
                    record.setValue(fieldInfo.getName(), date);
                    break;
                case "Timestamp":
                    // Parse the timestamp using the specified format
                    Date timestamp = parseDate(fieldValue, TIMESTAMP_FORMAT);
                    record.setValue(fieldInfo.getName(), timestamp);
                    break;
                default:
                    // Handle other data types if needed
                    break;
            }
        }

        return record;
    }
